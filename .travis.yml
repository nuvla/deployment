language: python
python:
 - "3.7"
dist: bionic
services:
- docker
before_install:
  - git clone https://github.com/nuvla/example-ubuntu.git ${HOME}/example-ubuntu
  - git clone https://github.com/nuvla/example-centos.git ${HOME}/example-centos
  - git clone https://github.com/nuvla/example-rstudio.git ${HOME}/example-rstudio
  - git clone https://github.com/nuvla/example-jupyter.git ${HOME}/example-jupyter
  - git clone https://github.com/nuvla/example-app.git ${HOME}/example-app
  - pip install nuvla-api
  - python -c 'import nuvla.api;'
script:
  - $TRAVIS_BUILD_DIR/test/swarm-deploy.sh deploy $SWARM_SIZE && ip=`cat $HOME/nuvla-test-host` && $TRAVIS_BUILD_DIR/test/wait-avail.sh https://$ip/api/cloud-entry-point $WAIT_AVAIL_MIN
  - cd functional-tests && export EXAMPLES_ROOT=${HOME} && export NUVLA_INSECURE=TRUE && export NUVLA_HOST=`cat $HOME/nuvla-test-host` && export SSH_PUBLIC_KEY=$HOME/.ssh/id_rsa.pub && export mname=`cat $HOME/docker-machine-master` && eval $($HOME/docker-machine env $mname) && printenv && lein do clean, test
after_success:
  - $TRAVIS_BUILD_DIR/test/swarm-deploy.sh terminate
after_failure:
  - $TRAVIS_BUILD_DIR/test/swarm-deploy.sh terminate
cache:
  directories:
  - $HOME/.m2
env:
  global:
  - secure: KLZxtxePxr0DDIKgDf/q3I+qBbLI5xAMR8YRCkupSaONyKXo6jZ0/cb40Fp0II6ortj3iyV5UAy6vtH4QaXMsHCu8T/63IbMO7RdULneLY/fWk1rLGfobdnlBKnTEd+wF+O4jvKaFH+bUVadSS+sdiw4PJcUjHCWm/ps9D9Pe/2lu4bFfNfSV8Ck1pi0tetHUzPO7B7pDHz3LJV5tuiwiXQHkwTrTGqrgIMdjWqJ7Iz0EPQYB+28KiAQFkncWyBsi1xvXrycE2Oc9p0U7egCmFozybpfLB1QUsvF0JPkfIB63did72E0+qiUQIZBvQa2fSYpLF1AfaCnIP/HonQpqlZRu6bKCmsgPy8yqe+A1hIuQ3bvZjP3V8KnTZiZeNCNyca0zoyKgSmlDkmOBJIc6TALhDmscWzqgvbt6PWIrCE7gpzS7HB/uVwkaiuK0XAVj2rehXbCbM/f9hQShkYrCKHFtBYnftqZLAHgoparFN8hg4q5UGpXCNR0QNqbe30qz1cPaQ0DoaVxA8LBAuScbHoptDo9IzeBKbjMuDf+puo+I03wuzHPJfmyUxO9xDGpzPs9lEXK7XWci4FFVhtS5o/k2moURtaOszXhoAj69PvA5tdQ2wPau6I/HyCPSySYFc7HHeiY8H3PFFmmWURXfS/8bLRe4DHvJ5Tx2E+YFA4=
  - secure: ZFCqfIaBSG8BMe9zuYMAy1Ib0jgUPgmXYMxA3CbOQs+dex+3J0D7ypqQAhM0TgJ1J0lDzZ1otB17UbO1c9HGkLOEv8h5cYMG0lu0uWC5gSenc2xBBq33AbCDHXxu++TFE16gQYuNzjM1psU8byEWcicVcXemVoFsPlqUFhKmc9RlSWeQ6xH+Z3XfUGq9+8KHznqw9MpEEImXslWYkth1NTOJRz3NKUZ4vFJdyxay5UvKtx62rDY9RKj7KefULkpQg7vXfn0cbsaiSATu6UJbRd6f9Pm0qGtRu9UOih21sQATMFLvs9R/2uNvCwq5TpD1dvtoGkh1VQGF3OeKhKwOx9BPjRzRUr5x6uymVpgSS/g9DcrJvq2jpG2YVhchVAhvhiWaWtP8+GtAmYIUaWb/zr4RI/P92iwovuIi5wU32Vf2FxERLif1wUj0v3Af9f9rjwYK+fDxAtR8xVsY9+StiOnpv3XlBz5NgeNEsMLb3q2YOIb6CesHH1GpqHhGfS6Alm+hzNa2juCmx2YPYJcvd/2x04cgev5ActN2AxQdaSPqOLv8XGSLb2CvU0v9GXJwiI/3lvnF3bW0G0lHMVxedpIv3h4WdanNSuCikXrbWm9sJiGDeSOZg0u+6c7ALDLNl1QcrmoxPbmGMYf8rrbQnnC+qzzoS2l3PDP4WyUVtvQ=
