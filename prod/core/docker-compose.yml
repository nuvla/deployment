version: '3.7'

networks:
  traefik-public:
    external: true
  nuvla-backend:
    external: true

secrets:
  session.crt:
    file: ./secrets/session.crt
  session.key:
    file: ./secrets/session.key

configs:
  logback.xml:
    file: ./logback.xml

services:
  api:
    image: nuvla/api:6.10.0
    configs:
      - source: logback.xml
        target: /opt/nuvla/server/resources/logback.xml
    environment:
      - ES_ENDPOINTS=es
      - ES_SNIFFER_INIT=yes
      - ES_SNIFF_INTERVAL=5001
      - ES_SNIFF_AFTER_FAILURE_DELAY=1001
      - ZK_ENDPOINTS=zk:2181
      - NUVLA_SUPER_PASSWORD=supeR8-supeR8
      - KAFKA_PRODUCER_INIT=yes
      - KAFKA_ENDPOINTS=${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
    secrets:
      - source: session.crt
        target: /etc/nuvla/session/session.crt
      - source: session.key
        target: /etc/nuvla/session/session.key
    deploy:
      placement:
        constraints:
          - node.labels.type == frontend
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.api-service.loadbalancer.server.port=8200"
        - "traefik.http.services.api-service.loadbalancer.healthcheck.path=/api/cloud-entry-point"
        - "traefik.http.middlewares.api-remove-authn-info.headers.customrequestheaders.nuvla-authn-info="
        - "traefik.http.middlewares.api-compress.compress=true"
        - "traefik.http.middlewares.api-middleware.chain.middlewares=api-remove-authn-info,api-compress"
        - "traefik.http.routers.api-router.rule=Host(`example.com`) && PathPrefix(`/api`)"
        - "traefik.http.routers.api-router.entrypoints=websecure"
        - "traefik.http.routers.api-router.tls.certresolver=cert-resolver"
        - "traefik.http.routers.api-router.middlewares=api-middleware"
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - nuvla-backend
      - traefik-public

  # User interface takes the paths /, /ui/*, anything else
  # is routed elsewhere.
  ui:
    image: nuvla/ui:2.40.0
    deploy:
      placement:
        constraints:
          - node.labels.type == worker-job
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.ui-service.loadbalancer.server.port=80"
        - "traefik.http.services.ui-service.loadbalancer.healthcheck.path=/ui/index.html"
        - "traefik.http.routers.ui-router.rule=Path(`/`) || PathPrefix(`/ui`)"
        - "traefik.http.routers.ui-router.entrypoints=websecure"
        - "traefik.http.routers.ui-router.tls=true"
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - traefik-public

  job-executor:
    image: nuvla/job:4.6.1
    command: -- /app/job_executor.py --api-url http://api:8200 --api-insecure --api-authn-header group/nuvla-admin --zk-hosts zk:2181
    deploy:
      replicas: 5
      placement:
        constraints:
          - node.labels.type == worker-job
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - nuvla-backend

  job-distributor:
    image: nuvla/job:4.6.1
    entrypoint: /app/job_distributor.py
    command: --api-url http://api:8200 --api-insecure --api-authn-header group/nuvla-admin --zk-hosts zk:2181
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.type == worker-job
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - nuvla-backend
