---
version: '3.7'

volumes:
  kafka-data:
    driver: local

networks:
  nuvla-backend:
    external: true

configs:
  ksql-queries-file:
    file: ../../streams/ksqldb/statements.replicas-1.sql

services:

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.2.1
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - 9092:9092
      - 9101:9101
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - backend
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      FROM_SCRATCH: "false"
    user: root
    command:
      - bash
      - -xc
      - |
        ### Cleanup from previous launch
        [ "$$FROM_SCRATCH" == "true" ] && rm -f $$KAFKA_LOG_DIRS/meta.properties

        # Docker workaround: Remove check for KAFKA_ZOOKEEPER_CONNECT parameter
        sed -i '/KAFKA_ZOOKEEPER_CONNECT/d' /etc/confluent/docker/configure

        # Docker workaround: Ignore cub zk-ready
        sed -i 's/cub zk-ready/echo ignore zk-ready/' /etc/confluent/docker/ensure

        # KRaft required step: Format the storage directory with a new cluster ID
        echo "kafka-storage format --ignore-formatted -t $$(kafka-storage random-uuid) -c /etc/kafka/kafka.properties" >> /etc/confluent/docker/ensure

        ### Start Kafka
        echo "Launching Kafka"
        /etc/confluent/docker/run &

        sleep infinity

  # ksqlDB stream processor
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.2.1
    depends_on:
      - kafka_config_topics
    healthcheck:
      test: nc -z localhost 1099
      start_period: 30s
      retries: 5
    ports:
      - 8088:8088
    networks:
      - backend
    configs:
      - source: ksql-queries-file
        target: /etc/ksqldb/statements.sql
    environment:
      KSQL_CONFIG_DIR: /etc/ksqldb
      KSQL_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_CONNECT_URL: http://connect:8083
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KSQL_KSQL_QUERIES_FILE: /etc/ksqldb/statements.sql
      KSQL_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      JMX_PORT: 1099

  # Notification service to Slack
  notify-slack:
    image: nuvla/kafka-notify:0.10.0
    depends_on:
      - ksqldb-server
    networks:
      - backend
    command:
      - slack
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      NUVLA_ENDPOINT: "${NUVLA_ENDPOINT}"

  # Notification service to Email
  notify-email:
    image: nuvla/kafka-notify:0.10.0
    depends_on:
      - ksqldb-server
    networks:
      - backend
    command:
      - email
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      NUVLA_ENDPOINT: "${NUVLA_ENDPOINT}"
      # See https://github.com/nuvla/kafka-notify for SMTP configuration via config file.

  subs-notifs:
    image: nuvla/subs-notifs:0.1.0
    depends_on:
      - ksqldb-server
    networks:
      - backend
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      ES_HOSTS: "${ES:-es:9200}"
