version: '3.7'

services:
  proxy:
    image: traefik:v2.9
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: traefik.yaml
        target: /traefik.yaml
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - frontend

  es:
    image: nuvla/es:7.11.1.0
    environment:
      - cluster.name=elasticsearch
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - backend

  zk:
    image: zookeeper:3.4.13
    environment:
      - ZOO_MY_ID=3
    ports:
      - "2181:2181"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    volumes:
      - zkdata:/data
      - zkdatalog:/datalog
    networks:
      - backend

  api:
    image: nuvla/api:6.0.16
    configs:
      - source: log4j.properties
        target: /opt/nuvla/server/resources/log4j.properties
    environment:
      - ES_ENDPOINTS=es
      - ES_SNIFFER_INIT=no
      - ZK_ENDPOINTS=zk:2181
      - KAFKA_PRODUCER_INIT=no
      - NUVLA_SUPER_PASSWORD=supeR8-supeR8
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=frontend"
        - "traefik.http.services.api-service.loadbalancer.server.port=8200"
        - "traefik.http.services.api-service.loadbalancer.healthcheck.path=/api/cloud-entry-point"
        - "traefik.http.middlewares.api-middleware.headers.customrequestheaders.nuvla-authn-info="
        - "traefik.http.routers.api-router.rule=PathPrefix(`/api`)"
        - "traefik.http.routers.api-router.entrypoints=websecure"
        - "traefik.http.routers.api-router.tls=true"
        - "traefik.http.routers.api-router.middlewares=api-middleware"
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - backend
      - frontend
    healthcheck:
      start_period: 30s
      retries: 5
      test: curl -sSf http://localhost:8200/api/cloud-entry-point || exit 1

  # User interface takes the paths /, /ui/*, anything else
  # is routed elsewhere.
  ui:
    image: nuvla/ui:2.33.6
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.ui-service.loadbalancer.server.port=80"
        - "traefik.http.services.ui-service.loadbalancer.healthcheck.path=/ui/index.html"
        - "traefik.http.routers.ui-router.rule=Path(`/`) || PathPrefix(`/ui`)"
        - "traefik.http.routers.ui-router.entrypoints=websecure"
        - "traefik.http.routers.ui-router.tls=true"
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - frontend

  job-executor:
    image: nuvla/job:3.2.7
    command: -- /app/job_executor.py --api-url http://api:8200 --api-insecure --api-authn-header group/nuvla-admin --zk-hosts zk:2181
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - backend

  job-distributor:
    image: nuvla/job:3.2.7
    entrypoint: /app/job_distributor.py
    command: --api-url http://api:8200 --api-insecure --api-authn-header group/nuvla-admin --zk-hosts zk:2181
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - backend

configs:
  traefik.yaml:
    file: ./traefik/traefik.yaml
  log4j.properties:
    file: ./log4j.properties

networks:
  frontend:
    driver: "overlay"
    name: "frontend"
  backend:
    driver: "overlay"
    name: "backend"

volumes:
  esdata:
    driver: local
  zkdata:
    driver: local
  zkdatalog:
    driver: local
